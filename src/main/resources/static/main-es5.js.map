{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/calculator/calculator.component.ts","webpack:///src/app/calculator/calculator.component.html","webpack:///src/app/calculator/calculator.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CalculatorComponent","calculatorQueryService","ngxService","result$","expression$","errorMessage$","invalidExpression$","emptyExpression$","isError$","loadExpressions","start","deleteExpression","subscribe","res","stop","hasOwnProperty","errorMessage","length","expressionList$","list","expression","saveExpression","calculateExpression","CalculatorService","httpClient","pipe","handleError","encodeURIComponent","params","set","get","responseType","headers","json","JSON","stringify","post","operation","result","error","console","message","providedIn","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaM,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,yBAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,wD;AAAA;AAAA;ACPzB;;AACE;;AACI;;AACJ;;AACF;;AACA;;;;;;;;;sEDEaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA+BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAXJ,CACP,oEADO,EAEP,uEAFO,EAGP,oEAHO,EAIP,qEAJO,EAKP,0DALO,EAMP,+DANO,CAWI;;;;0HAGFA,S,EAAS;AAAA,uBAjBlB,2DAiBkB,EAhBlB,oFAgBkB;AAhBC,kBAGnB,oEAHmB,EAInB,uEAJmB,EAKnB,oEALmB,EAMnB,qEANmB,EAOnB,0DAPmB,EAQnB,+DARmB;AAgBD,O;AARD,K;;;;;sEAQRA,S,EAAS;cAnBrB,sDAmBqB;eAnBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,oFAFY,CADN;AAKRP,iBAAO,EAAE,CACP,oEADO,EAEP,uEAFO,EAGP,oEAHO,EAIP,qEAJO,EAKP,0DALO,EAMP,+DANO,CALD;AAgBRQ,mBAAS,EAAE,EAhBH;AAiBRC,mBAAS,EAAE,CAAC,2DAAD;AAjBH,S;AAmBY,Q;;;;;;;;;;;;;;;;;;AC/BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMM;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAEF;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;;;AAOF;;AACE;;AAAS;;AAAM;;AAAiB;;AAAQ;;AAAO;;AAAe;;AAC9D;;AAA4C;AAAA;;AAAA;;AAAA;AAAA;;AAAsC;;AAAI;;AACxF;;;;;;AAFiB;;AAAA;;AAAgC;;AAAA;;;;;;;;AAiB7C;;AACE;;AAAgB;;AAAoB;;AACpC;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAmC;;AAAM;;AAAS;;AAC9F;;;;;;AAHkB;;AAAA;;AACZ;;AAAA;;;;QD9BDC,mB;AASX,mCACUC,sBADV,EAEUC,UAFV,EAEwC;AAAA;;AAD9B,aAAAD,sBAAA,GAAAA,sBAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AATV,aAAAC,OAAA,GAAkB,GAAlB;AACA,aAAAC,WAAA,GAAsB,GAAtB;AACA,aAAAC,aAAA,GAAwB,GAAxB;AACA,aAAAC,kBAAA,GAAqB,KAArB;AACA,aAAAC,gBAAA,GAAmB,KAAnB;AACA,aAAAC,QAAA,GAAW,KAAX;AAKK;;;;mCAEG;AACN,eAAKC,eAAL;AACD;;;yCAEuBvB,E,EAAU;AAAA;;AAChC,eAAKgB,UAAL,CAAgBQ,KAAhB;AAEA,eAAKT,sBAAL,CACGU,gBADH,CACoBzB,EADpB,EAEK0B,SAFL,CAEe,UAACC,GAAD,EAAS;AAClB,iBAAI,CAACX,UAAL,CAAgBY,IAAhB,GADkB,CACM;;;AAExB,gBAAID,GAAG,IAAIA,GAAG,CAACE,cAAJ,CAAmB,cAAnB,CAAX,EAA+C;AAC7C,mBAAI,CAACP,QAAL,GAAgB,IAAhB;AACA,mBAAI,CAACH,aAAL,GAAqBQ,GAAG,CAACG,YAAzB;AACD;;AAED,iBAAI,CAACP,eAAL;AACD,WAXL;AAYD;;;0CAEqB;AAAA;;AACpB,eAAKP,UAAL,CAAgBQ,KAAhB;AAEA,eAAKT,sBAAL,CACGQ,eADH,GAEKG,SAFL,CAEe,UAACC,GAAD,EAAS;AAClB,kBAAI,CAACX,UAAL,CAAgBY,IAAhB,GADkB,CACM;;;AAExB,gBAAID,GAAG,IAAIA,GAAG,CAACE,cAAJ,CAAmB,cAAnB,CAAX,EAA+C;AAC7C,oBAAI,CAACP,QAAL,GAAgB,IAAhB;AACA,oBAAI,CAACH,aAAL,GAAqBQ,GAAG,CAACG,YAAzB;AACD,aAHD,MAGO,IAAIH,GAAG,CAACI,MAAJ,IAAc,CAAlB,EAAqB;AAC1B,oBAAI,CAACX,kBAAL,GAA0B,IAA1B;AACA,oBAAI,CAACH,OAAL,GAAe,GAAf;AACA;AACD;;AAED,gBAAIU,GAAG,IAAIA,GAAG,CAACE,cAAJ,CAAmB,MAAnB,CAAX,EAAuC;AACrC,oBAAI,CAACG,eAAL,GAAuBL,GAAG,CAACM,IAA3B;AACD;AACF,WAjBL;AAkBD;;;uCAEqBC,U,EAAkB;AAAA;;AACtC,eAAKlB,UAAL,CAAgBQ,KAAhB;AAEA,eAAKT,sBAAL,CACGoB,cADH,CACkBD,UADlB,EAEKR,SAFL,CAEe,UAACC,GAAD,EAAS;AAClB,kBAAI,CAACX,UAAL,CAAgBY,IAAhB,GADkB,CACM;;;AAExB,gBAAID,GAAG,IAAIA,GAAG,CAACE,cAAJ,CAAmB,cAAnB,CAAX,EAA+C;AAC7C,oBAAI,CAACP,QAAL,GAAgB,IAAhB;AACA,oBAAI,CAACH,aAAL,GAAqBQ,GAAG,CAACG,YAAzB;AACD;;AAED,kBAAI,CAACb,OAAL,GAAe,GAAf;AACA,kBAAI,CAACC,WAAL,GAAmB,GAAnB;;AAEA,kBAAI,CAACK,eAAL;AACD,WAdL;AAeD;;;4CAE0BW,U,EAAkB;AAAA;;AAC3C,eAAKlB,UAAL,CAAgBQ,KAAhB;AACA,eAAKJ,kBAAL,GAA0B,KAA1B;AACA,eAAKE,QAAL,GAAgB,KAAhB;AACA,eAAKH,aAAL,GAAqB,EAArB;AACA,eAAKE,gBAAL,GAAwB,KAAxB;AACA,eAAKH,WAAL,GAAmBgB,UAAnB;;AAEA,cAAI,KAAKhB,WAAL,CAAiBa,MAAjB,IAA2B,CAA/B,EAAkC;AAChC,iBAAKf,UAAL,CAAgBY,IAAhB;AACA,iBAAKP,gBAAL,GAAwB,IAAxB;AACA;AACD;;AAED,eAAKN,sBAAL,CACGqB,mBADH,CACuBF,UADvB,EAEKR,SAFL,CAEe,UAACC,GAAD,EAAS;AAClB,kBAAI,CAACX,UAAL,CAAgBY,IAAhB,GADkB,CACM;;;AAExB,gBAAID,GAAG,IAAIA,GAAG,CAACE,cAAJ,CAAmB,cAAnB,CAAX,EAA+C;AAC7C,oBAAI,CAACP,QAAL,GAAgB,IAAhB;AACA,oBAAI,CAACH,aAAL,GAAqBQ,GAAG,CAACG,YAAzB;AACD,aAHD,MAGO,IAAIH,GAAG,CAACI,MAAJ,IAAc,CAAlB,EAAqB;AAC1B,oBAAI,CAACX,kBAAL,GAA0B,IAA1B;AACA,oBAAI,CAACH,OAAL,GAAe,GAAf;AACA;AACD;;AAED,gBAAIU,GAAG,IAAIA,GAAG,CAACE,cAAJ,CAAmB,QAAnB,CAAX,EAAyC;AACvC,oBAAI,CAACZ,OAAL,GAAeU,GAAG,CAAC,QAAD,CAAlB;AACD;AACF,WAjBL;AAkBD;;;;;;;uBA9GUb,mB,EAAmB,sI,EAAA,iI;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,e;AAAA,a;AAAA,0sB;AAAA;AAAA;;;ACXhC;;AACE;;AAAyB;;AAA2B;;AACpD;;AAA+B;AAAA;;AAAA;;AAAA,mBAAY,IAAAsB,mBAAA,WAAZ;AAA4C,WAA5C;;AAC7B;;AACE;;AAAwC;;AAAoB;;AAC5D;;AACA;;AAGA;;AAGA;;AAGA;;AAAmD;;AAA4B;;AACjF;;AACA;;AAAsB;AAAA;;AAAA;;AAAA,mBAAS,IAAAA,mBAAA,WAAT;AAAyC,WAAzC;;AAAoE;;AAAS;;AACrG;;AACA;;AACA;;AACE;;AAIF;;AACA;;AACA;;AACE;;AACE;;AAAI;;AAAc;;AAClB;;AACE;;AACA;;AACE;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAO;;AACzB;;AACA;;AACA;;AACA;;AAKA;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA2B;;AAAuB;;AACpD;;AACF;;AACF;;;;AA/CuC;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AASZ;;AAAA;;AAkBf;;AAAA;;;;;;;;;sED5BCtB,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTP,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa4B,iB;AAGX,iCAAoBC,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAFpB,aAAArB,OAAA,GAAkB,MAAlB;AAGC;;;;yCAEgBjB,E,EAAY;AAC3B,iBAAO,KACJsC,UADI,WAEG,wDAAwDtC,EAF3D,EAGJuC,IAHI,CAIH,kEAAW,KAAKC,WAAL,CAAsB,qBAAtB,CAAX,CAJG,CAAP;AAMD;;;4CAEmBN,U,EAAoB;AACtCA,oBAAU,GAAGO,kBAAkB,CAACP,UAAD,CAA/B;AAEA,cAAIQ,MAAM,GAAG,IAAI,+DAAJ,GACZC,GADY,CACR,YADQ,EACMT,UADN,CAAb;AAGA,iBAAO,KACJI,UADI,CAEJM,GAFI,CAEA,4DAFA,EAE8D;AAAEF,kBAAM,EAAEA,MAAV;AAAkBG,wBAAY,EAAE;AAAhC,WAF9D,EAGJN,IAHI,CAIH,kEAAW,KAAKC,WAAL,CAAsB,qBAAtB,CAAX,CAJG,CAAP;AAMD;;;uCAEcN,U,EAAoB;AACjC,cAAIY,OAAO,GAAG,IAAI,gEAAJ,EAAd;AACAA,iBAAO,GAAGA,OAAO,CAACH,GAAR,CAAY,cAAZ,EAA4B,kBAA5B,CAAV;AAEA,cAAII,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACf,sBAAU,EAAEA;AAAb,WAAf,CAAX;AACA,iBAAO,KACJI,UADI,CAEJY,IAFI,CAEC,kDAFD,EAEqDH,IAFrD,EAE2D;AAACD,mBAAO,EAAEA;AAAV,WAF3D,EAGJP,IAHI,CAIH,kEAAW,KAAKC,WAAL,CAAsB,qBAAtB,CAAX,CAJG,CAAP;AAMD;;;0CAEiB;AAChB,iBAAO,KACJF,UADI,CAEJM,GAFI,CAEA,wDAFA,EAGJL,IAHI,CAIH,kEAAW,KAAKC,WAAL,CAAsB,qBAAtB,CAAX,CAJG,CAAP;AAMD;;;sCAE6D;AAAA,cAAvCW,SAAuC,uEAA3B,WAA2B;AAAA,cAAdC,MAAc;AAC5D,iBAAO,UAACC,KAAD,EAAiC;AAEtC;AACAC,mBAAO,CAACD,KAAR,CAAcA,KAAd,EAHsC,CAGhB;;AAEtB,gBAAIA,KAAK,CAACA,KAAN,CAAYxB,cAAZ,CAA2B,SAA3B,CAAJ,EAA2C;AACzCuB,oBAAM,GAAG;AAACtB,4BAAY,EAAEuB,KAAK,CAACA,KAAN,CAAYE;AAA3B,eAAT;AACD;;AAED,mBAAO,gDAAGH,MAAH,CAAP;AACD,WAVD;AAWD;;;;;;;uBA/DUf,iB,EAAiB,uH;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVmB,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACT9B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIN,OAAO,CAACD,KAAR,CAAcO,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Calculator Dawid Firląg';\n}\n","<div class=\"container\">\n  <div class=\"container-fluid\">\n      <app-calculator></app-calculator>\n  </div>\n</div>\n<ngx-ui-loader></ngx-ui-loader>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { FormsModule }   from '@angular/forms';\nimport { NgxUiLoaderModule } from 'ngx-ui-loader';\n\nimport { AppComponent } from './app.component';\nimport { CalculatorComponent } from './calculator/calculator.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CalculatorComponent,\n  ],\n  imports: [\n    NgbModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgxUiLoaderModule,\n//     !environment.production ? HttpClientInMemoryWebApiModule.forRoot(\n//       CalculatorInMemoryDataService, { dataEncapsulation: false }\n//     ),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { FormsModule }   from '@angular/forms';\n\nimport { CalculatorService } from \"./calculator.service\";\n\n@Component({\n  selector: 'app-calculator',\n  templateUrl: './calculator.component.html',\n  styleUrls: ['./calculator.component.scss']\n})\nexport class CalculatorComponent implements OnInit {\n  expressionList$: [];\n  result$: string = \"-\";\n  expression$: string = \"-\";\n  errorMessage$: string = \"-\";\n  invalidExpression$ = false;\n  emptyExpression$ = false;\n  isError$ = false;\n\n  constructor(\n    private calculatorQueryService: CalculatorService,\n    private ngxService: NgxUiLoaderService\n  ) { }\n\n  ngOnInit(): void {\n    this.loadExpressions();\n  }\n\n  public deleteExpression(id: number): void {\n    this.ngxService.start();\n\n    this.calculatorQueryService\n      .deleteExpression(id)\n        .subscribe((res) => {\n          this.ngxService.stop(); // stop foreground spinner of the master loader with 'default' taskId\n\n          if (res && res.hasOwnProperty(\"errorMessage\")) {\n            this.isError$ = true;\n            this.errorMessage$ = res.errorMessage;\n          }\n\n          this.loadExpressions();\n        });\n  }\n\n  public loadExpressions(): void {\n    this.ngxService.start();\n\n    this.calculatorQueryService\n      .loadExpressions()\n        .subscribe((res) => {\n          this.ngxService.stop(); // stop foreground spinner of the master loader with 'default' taskId\n\n          if (res && res.hasOwnProperty(\"errorMessage\")) {\n            this.isError$ = true;\n            this.errorMessage$ = res.errorMessage;\n          } else if (res.length == 0) {\n            this.invalidExpression$ = true\n            this.result$ = \"-\";\n            return;\n          }\n\n          if (res && res.hasOwnProperty(\"list\")) {\n            this.expressionList$ = res.list;\n          }\n        });\n  }\n\n  public saveExpression(expression: string): void {\n    this.ngxService.start();\n\n    this.calculatorQueryService\n      .saveExpression(expression)\n        .subscribe((res) => {\n          this.ngxService.stop(); // stop foreground spinner of the master loader with 'default' taskId\n\n          if (res && res.hasOwnProperty(\"errorMessage\")) {\n            this.isError$ = true;\n            this.errorMessage$ = res.errorMessage;\n          }\n\n          this.result$ = \"-\";\n          this.expression$ = \"-\";\n\n          this.loadExpressions();\n        });\n  }\n\n  public calculateExpression(expression: string): void {\n    this.ngxService.start();\n    this.invalidExpression$ = false;\n    this.isError$ = false;\n    this.errorMessage$ = \"\";\n    this.emptyExpression$ = false;\n    this.expression$ = expression;\n\n    if (this.expression$.length == 0) {\n      this.ngxService.stop();\n      this.emptyExpression$ = true;\n      return;\n    }\n\n    this.calculatorQueryService\n      .calculateExpression(expression)\n        .subscribe((res) => {\n          this.ngxService.stop(); // stop foreground spinner of the master loader with 'default' taskId\n\n          if (res && res.hasOwnProperty(\"errorMessage\")) {\n            this.isError$ = true;\n            this.errorMessage$ = res.errorMessage;\n          } else if (res.length == 0) {\n            this.invalidExpression$ = true\n            this.result$ = \"-\";\n            return;\n          }\n\n          if (res && res.hasOwnProperty(\"double\")) {\n            this.result$ = res[\"double\"];\n          }\n        });\n  }\n}\n","<div class=\"my-box\">\n  <h2 class=\"text-central\">Math expression interpreter</h2>\n  <form #calculatorForm=\"ngForm\" (ngSubmit)=\"calculateExpression(input.value)\">\n    <div class=\"form-group\">\n      <label for=\"calculate-expression-input\">Calculate expression</label>\n      <input type=\"input\" class=\"form-control\" #input id=\"calculate-expression-input\" placeholder=\"1+2*(9+1)\">\n      <small class=\"error text-danger\" *ngIf=\"isError$\">\n        {{ errorMessage$ }}\n      </small>\n      <small class=\"error text-danger\" *ngIf=\"invalidExpression$\">\n        Invalid expression\n      </small>\n      <small class=\"error text-danger\" *ngIf=\"emptyExpression$\">\n        Expression can't be empty\n      </small>\n      <small id=\"emailHelp\" class=\"form-text text-muted\">Available operators: +-*/().</small>\n    </div>\n    <button type=\"button\" (click)=\"calculateExpression(input.value)\" class=\"btn btn-primary \">Calculate</button>\n  </form>\n  <hr>\n  <div class=\"row\">\n    <div class=\"col-md-12\" *ngIf=\"result$ != '-'\">\n      Result : <span>{{ expression$ }}</span> <span> = {{ result$ }}</span>\n      <button class=\"btn btn-primary float-right\" (click)=\"saveExpression(expression$)\">Save</button>\n    </div>\n  </div>\n  <hr>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <h5>Saved results:</h5>\n      <table class=\"table\">\n        <thead>\n        <tr>\n          <th scope=\"col\">Expression</th>\n          <th scope=\"col\">Result</th>\n          <th scope=\"col\">Options</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let row of expressionList$\">\n          <th scope=\"row\">{{ row.expression }}</th>\n          <td>{{ row.result }}</td>\n          <td><button class=\"btn btn-danger btn-sm\" (click)=\"deleteExpression(row.id)\">Remove</button></td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <small class=\"float-right\">Powered by Dawid Firląg</small>\n    </div>\n  </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalculatorService {\n  result$: string = \"none\";\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  deleteExpression(id: number) {\n    return this\n      .httpClient\n      .delete(\"http://localhost:8080/expression/delete-expression/\" + id)\n      .pipe(\n        catchError(this.handleError<any>('calculateExpression'))\n      );\n  }\n\n  calculateExpression(expression: string) {\n    expression = encodeURIComponent(expression);\n\n    let params = new HttpParams()\n    .set(\"expression\", expression);\n\n    return this\n      .httpClient\n      .get(\"http://localhost:8080/calculator/get-calculated-expression\", { params: params, responseType: \"json\"})\n      .pipe(\n        catchError(this.handleError<any>('calculateExpression'))\n      );\n  }\n\n  saveExpression(expression: string) {\n    let headers = new HttpHeaders();\n    headers = headers.set('Content-Type', 'application/json');\n\n    let json = JSON.stringify({expression: expression});\n    return this\n      .httpClient\n      .post(\"http://localhost:8080/expression/save-expression\", json, {headers: headers})\n      .pipe(\n        catchError(this.handleError<any>('calculateExpression'))\n      );\n  }\n\n  loadExpressions() {\n    return this\n      .httpClient\n      .get(\"http://localhost:8080/expression/get-saved-expressions\")\n      .pipe(\n        catchError(this.handleError<any>('calculateExpression'))\n      );\n  }\n\n  private handleError<T>(operation = 'operation', result?: any) {\n    return (error: any): Observable<any> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      if (error.error.hasOwnProperty(\"message\")) {\n        result = {errorMessage: error.error.message};\n      }\n\n      return of(result as any);\n    };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}